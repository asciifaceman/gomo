# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:  
  push:
    tags:
      - "v*.*.*"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Run tests
      run: go test -v ./...

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19
        
    - name: Get current date
      id: date
      run: |
        echo "date=$(date)" >> $GITHUB_ENV
      #run: echo "::set-output name=date::$(date)"

    - name: Build linux@amd64
      run: go build -ldflags "-X github.com/asciifaceman/gomo/cmd.version=${{  github.ref_name }} -X 'github.com/asciifaceman/gomo/cmd.build=${{ env.date }}'"
      env:
        GOOS: 'linux'
        GOARCH: 'amd64' # Wonder if I can matrix this with arm64 as well
    
    - name: tar build
      run: tar cvfz gomo-amd64.tar.gz gomo
    
    - name: Clean up amd64
      run: rm -rf gomo

    - name: Build linux@arm64
      run: go build -ldflags "-X github.com/asciifaceman/gomo/cmd.version=${{  github.ref_name }} -X 'github.com/asciifaceman/gomo/cmd.build=${{ env.date }}'"
      env:
        GOOS: 'linux'
        GOARCH: 'amd64' # Wonder if I can matrix this with arm64 as well

    - name: tar build
      run: tar cvfz gomo-arm64.tar.gz gomo

    - name: Release
      uses: softprops/action-gh-release@v1
      #if: startsWith(github.ref, 'refs/tags/')
      with:
        tag_name: ${{  github.ref_name }}
        files: |
          gomo-amd64.tar.gz
          gomo-arm64.tar.gz

